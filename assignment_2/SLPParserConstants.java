/* Generated By:JJTree&JavaCC: Do not edit this line. SLPParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface SLPParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SEMIC = 11;
  /** RegularExpression Id. */
  int COLON = 12;
  /** RegularExpression Id. */
  int ASSIGN = 13;
  /** RegularExpression Id. */
  int PRINT = 14;
  /** RegularExpression Id. */
  int LBR = 15;
  /** RegularExpression Id. */
  int RBR = 16;
  /** RegularExpression Id. */
  int COMMA = 17;
  /** RegularExpression Id. */
  int PLUS_SIGN = 18;
  /** RegularExpression Id. */
  int MINUS_SIGN = 19;
  /** RegularExpression Id. */
  int DIV_SIGN = 20;
  /** RegularExpression Id. */
  int RETURN = 21;
  /** RegularExpression Id. */
  int MAIN = 22;
  /** RegularExpression Id. */
  int BEGIN = 23;
  /** RegularExpression Id. */
  int END = 24;
  /** RegularExpression Id. */
  int VARIABLE = 25;
  /** RegularExpression Id. */
  int CONSTANT = 26;
  /** RegularExpression Id. */
  int TYPE = 27;
  /** RegularExpression Id. */
  int IS = 28;
  /** RegularExpression Id. */
  int BOOL = 29;
  /** RegularExpression Id. */
  int IF = 30;
  /** RegularExpression Id. */
  int ELSE = 31;
  /** RegularExpression Id. */
  int WHILE = 32;
  /** RegularExpression Id. */
  int SKIP_WORD = 33;
  /** RegularExpression Id. */
  int LOG_NEG = 34;
  /** RegularExpression Id. */
  int LOG_DIS = 35;
  /** RegularExpression Id. */
  int LOG_AND = 36;
  /** RegularExpression Id. */
  int EQUALS = 37;
  /** RegularExpression Id. */
  int NOT_EQUALS = 38;
  /** RegularExpression Id. */
  int LESS_THAN = 39;
  /** RegularExpression Id. */
  int LESS_EQUALS = 40;
  /** RegularExpression Id. */
  int GREATER_THAN = 41;
  /** RegularExpression Id. */
  int GREATER_EQUALS = 42;
  /** RegularExpression Id. */
  int NUM = 43;
  /** RegularExpression Id. */
  int DIGIT = 44;
  /** RegularExpression Id. */
  int ID = 45;
  /** RegularExpression Id. */
  int LETTER = 46;
  /** RegularExpression Id. */
  int OTHER = 47;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_COMMENT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "<token of kind 6>",
    "\"/*\"",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 10>",
    "\";\"",
    "\":\"",
    "\":=\"",
    "\"print\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\"+\"",
    "\"-\"",
    "\"/\"",
    "\"return\"",
    "\"main\"",
    "\"begin\"",
    "\"end\"",
    "\"variable\"",
    "\"constant\"",
    "<TYPE>",
    "\"is\"",
    "<BOOL>",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"skip\"",
    "\"~\"",
    "\"|\"",
    "\"&\"",
    "\"=\"",
    "\"!=\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "<NUM>",
    "<DIGIT>",
    "<ID>",
    "<LETTER>",
    "<OTHER>",
  };

}
